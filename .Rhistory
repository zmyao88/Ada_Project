require(stringr)
require(gdata)
data <- read.csv("C:/Users/Zaiming/Documents/GitHub/Ada_Project/ada data.csv", header=FALSE, sep=",",
na.strings="?", stringsAsFactors=FALSE)
head(data,1)
data[,147] <- as.numeric(str_replace_all(trim(data[,147]), '[[:punct:]]', ""))
View(data)
head(data,1)
head(data[,147],50)
View(data)
?read.table
attr_name <- read.delim("C:/Users/Zaiming/Documents/GitHub/Ada_Project/attr_name.txt", header=F, sep="\\")
View(attr_name)
attr_name <- read.delim("C:/Users/Zaiming/Documents/GitHub/Ada_Project/attr_name.txt", header=F, sep="\\")
View(attr_name)
head(attr_name)
str_extract(string=attr_name, pattern="-- (\\w| )+ :")
install.packages("XML")
require(XML)
require(plyr)
require(stringr)
wars <- readHTMLTable("http://en.wikipedia.org/wiki/List_of_wars_involving_the_United_States", which=2)
class(wars$Time)
dim(wars)
wars <- colwise(as.character)(wars) #convert all at once, Yeah!
class(wars$Time)
wars$Time
theTimes <- str_split(string=wars$Time, pattern="(â?????)|-") #search the â????? or - then replace with "", shweet!
theStart <- sapply(theTimes, FUN=function(x) x[1]) #
theStart <- str_trim(theStart) #trims off leading and trailing space
str_extract(string=theStart, pattern="January")
theStart[str_detect(string=theStart, pattern="January")]
str_sub(string=theStart, start=2, end=5)
str_extract(string=theStart, "[0-9][0-9][0-9][0-9]")  #search any digit 4times in a row
str_extract(string=theStart, "[0-9]{4}") # same as previous one
str_extract(string=theStart, "\\d{4}") # same as previous one
str_extract(string=theStart, "\\d{1,2} ") #search 1 or 2 digits followed by 1 space
str_extract(string=theStart, "\\d{1,3}")
str_replace(string=theStart, pattern="\\d", replacement="x") #only the 1st digit is replaced
str_replace_all(string=theStart, pattern="\\d", replacement="x")
str_replace(string=theStart, pattern="\\d{1,4}", replacement="x")
str_replace_all(string=theStart, pattern="\\d{1,4}", replacement="x")
str_extract(string=theStart, pattern="^\\d{4}")
str_extract(string=theStart, pattern="\\d{4}$")
str_extract(string=theStart, pattern="^\\d{4}$")
sports <- c("hockey", "Ice Hockey", "Curling", "Field Hockey", "Football", "European Football", "Football Australian")
str_replace(string=sports, pattern="(Ice) Hockey", replacement="Broomball")
str_replace(string=sports, pattern="(Ice) Hockey", replacement="\\1 Broomball")
str_replace(string=sports, pattern="(Ice)*Hockey", replacement="\\1 Broomball")
str_replace(string=sports, pattern="(Ice)*( )*Hockey", replacement="\\1 Broomball")
theString <- "<a href=index.html>The Link is here</a>"
str_extract(string=theString, pattern=">\\w+<") #star from >  and look for letters(\\w) with more than one(+) and ends at <
str_extract(string=theString, pattern=">(\\w| )+<")
str_extract(string=theString, pattern=">.+?<") # period = anything, and don't be greedy don't assume "<" is the last character
str_replace(string=theString, pattern="^.+?>(.+?)<.+$", replace="\\1")
str_replace(string=theString, pattern="^.+>(.+)? (.+)? (.+)?<.+$", replace="\\1 hello \\2")
# dollar sign = end of string
# . = anything
# + = several times
# "\\d" = digits
# "\\w" = words
# "\\s" =
?regex
# "[0-9]"
# "[A-Z]"
# "[a-z]"
# "[A-Za-z]"
# "[^A-Za-z]" #return not the stuff a-z A-Z
str_extract(string=theString, pattern=">(\\w| )+<")
str_extract(string=attr_name, pattern="--(\\w| )+:")
str_extract(string=attr_name[1,1], pattern="--(\\w| )+:")
a1 <- str_extract(string=attr_name, pattern="--(\\w| )+:")
require(plyr)
a2 <- apply(attr_name, 1, function(x) str_extract(string=x, pattern="--(\\w| )+:"))
fix(`a2`)
fix(`a2`)
a2[[1]]
a3 <- lapply(a2, function(x) str_replace_all(x, c("-", " ", ":"), ""))
fix(`a3`)
a3[[2]]
fix(`a2`)
fix(`a3`)
fix(`a2`)
a2[[1]]
a2[[2]]
a3 <- lapply(a2, function(x) str_replace_all(x, c("-", " ", ":"), ""))
fix(`a3`)
fix(`a3`)
a3 <- sapply(a2, function(x) str_replace_all(x, c("-", " ", ":"), ""))
View(`a3`)
?str_replace_all
a3 <- sapply(a2, function(x) str_replace_all(x, "-"|" "|":", ""))
a3 <- sapply(a2, function(x) str_replace_all(x, "-" || " " || ":", ""))
a3 <- sapply(a2, function(x) str_replace_all(x, "-" | " " | ":", ""))
a3 <- sapply(a2, function(x) str_replace_all(x, ("-" | " " | ":"), ""))
a3 <- sapply(a2, function(x) str_replace_all(x, "(-| |:)", ""))
fix(`a3`)
a3[[2]]
a3[[100]]
attr_name2 <- apply(attr_name, 1, function(x) str_extract(string=x, pattern="--(\\w| )+:"))
attr_name2 <- apply(attr_name, 1, function(x) str_extract(string=x, pattern="--(\\w| )+:"))
attr_name2 <- sapply(attr_name2, function(x) str_replace_all(x, "(-| |:)", ""))
fix(attr_name2)
attr_name2 <- ldply(attr_name2, function(x) str_replace_all(x, "(-| |:)", ""))
View(attr_name2)
names(data)
names(data) < attr_name2[,2]
names(data) <- attr_name2[,2]
View(data)
rm(list=ls())
data <- read.csv("C:/Users/Zaiming/Documents/GitHub/Ada_Project/ada data.csv", header=FALSE, sep=",",
na.strings="?", stringsAsFactors=FALSE)
data[,147] <- as.numeric(str_replace_all(trim(data[,147]), '[[:punct:]]', ""))
### Load in Variable names
attr_name <- read.delim("C:/Users/Zaiming/Documents/GitHub/Ada_Project/attr_name.txt", header=F, sep="\\")
attr_name2 <- apply(attr_name, 1, function(x) str_extract(string=x, pattern="--(\\w| )+:"))
attr_name2 <- ldply(attr_name2, function(x) str_replace_all(x, "(-| |:)", ""))
# assign feature names to data
names(data) <- attr_name2[,2]
rm(list=ls())
### Load in data and mark NA value
data <- read.csv("C:/Users/Zaiming/Documents/GitHub/Ada_Project/ada data.csv", header=FALSE, sep=",",
na.strings="?", stringsAsFactors=FALSE)
data[,147] <- as.numeric(str_replace_all(trim(data[,147]), '[[:punct:]]', ""))
### Load in Variable names
attr_name <- read.delim("C:/Users/Zaiming/Documents/GitHub/Ada_Project/attr_name.txt", header=F, sep="\\")
attr_name2 <- apply(attr_name, 1, function(x) str_extract(string=x, pattern="--(\\w| )+:"))
attr_name2 <- ldply(attr_name2, function(x) str_replace_all(x, "(-| |:)", ""))
# assign feature names to data
names(data) <- attr_name2[,2]
write.csv(data,"C:/Users/Zaiming/Documents/GitHub/Ada_Project/FD.csv")
